<!-- snippets/product-modal.liquid -->

<!-- Modal Structure -->
<div class="sizeModal modal">
  <div class="modal-content">
    <form method="post" action="/cart/add">
      <input type="hidden" name="id" id="variant-id">

      <select id="size-select" name="id" required>
        <option value="" disabled selected>Välj ett alternativ</option>
        {% for variant in product.variants %}
          <option value="{{ variant.id }}">{{ variant.title }}</option>
        {% endfor %}
      </select>

      <button class="add-to-cart" type="submit">Beställ</button>
      <button type="button" class="close-modal">X</button>
    </form>
  </div>
</div>

<!-- CSS for the modal -->
<style>
          /* Modal Background */

     .modal {
      display: none;
       position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
  }


          /* Modal Content */
         .modal-content {
          background-color: #fff;
          width: 300px;
          height: 188px;
          text-align: center;
          position: absolute; /* Use absolute positioning for dynamic placement */
          /* Remove these properties to allow JS to control the position */
          top: auto;
          right: auto;
          transform: none;
      }

          /* Close Button */
          .close-modal {
              float: right;
              font-size: 24px;
              cursor: pointer;
            width: 40px;
          height: 40px;
          border-radius: 50%;
          padding: 0;
          display: flex;
          align-items: center;
          justify-content: center;
          border: 1px solid red;
          color: red;
            top: 30px;
            background-color: #fff;
            font-size: 20px;
          font-weight: 600;
          margin-top: 4px;
    margin-right: 13px;
          }


            .modal.hidden {
              display: none;
            }

            .modal__close {
              background: none;
              font-size: 24px;
              cursor: pointer;
              display: none;
            }



            .close-modal:hover {
              background: red; /* Red background on hover */
              color: white; /* White "X" on hover */
              border-color: red; /* Red border on hover */
              color: #fff;
              border: 1px solid white;
            }

            .close-modal .material-symbols-outlined {
              font-size: 24px; /* Size of the "X" icon */
              color: red; /* Initial icon color */
            }

            .close-modal:hover .material-symbols-outlined {
              color: white; /* Icon color on hover */
            }

            /* Form Styles */

  form{
        margin-top: 21px;
  }
           #sizeModal form {
              display: flex;
              flex-direction: column;
              margin-top: 1px;
              position: relative; /* Ensure relative positioning for absolute cancel button */
              width: 268px;
            height: 117px;

             margin-top: -181px;
            margin-left: -17px;
            }

            #size-select {
              width: 268px;
              height: 52px;
              font-size: medium;
              padding: 13px 15px;
            border-radius: 0;
            margin: 0 0 10px;

            background-position: 100%;
            background-repeat: no-repeat;
            color: #000 !important;
            }

            .add-to-cart {
          border-radius: 0;
          background: red;
          color: #fff;
          font-family: "Exo 2", Sans-serif;
          font-weight: 600;
          padding: 11px 20px;
          border: 2px solid var(--e-global-color-primary);
          width: 268px;
          height: 50px;
          margin-top: 5px;
            }
</style>

<!-- JavaScript for the modal -->
<script>
       document.addEventListener('DOMContentLoaded', function() {
      // Get all buttons that open the modal
      const openModelButtons = document.querySelectorAll('.open-model');

      // Add click event listener to each button
      openModelButtons.forEach(button => {
          button.addEventListener('click', function(event) {
              event.preventDefault(); // Prevent default behavior

              // Get the product ID from the button's data attribute
              const productId = this.getAttribute('data-product-id');
              console.log('Opening modal for product ID:', productId);

              // Get the modal using its class
              const modal = document.querySelector('.sizeModal');

              // Check if modal exists and display it
              if (modal) {
                  // Set the hidden input value to the product ID in the modal form
                  modal.querySelector('#variant-id').value = productId;

                  // Display the modal
                  modal.style.display = 'block';
                  console.log('Modal displayed with product ID:', productId);
              } else {
                  console.error('Modal not found');
              }
          });
      });

      // Close the modal when clicking the close button
      document.querySelectorAll('.close-modal').forEach(button => {
          button.addEventListener('click', function() {
              const modal = this.closest('.sizeModal'); // Get the closest modal
              if (modal) {
                  modal.style.display = 'none'; // Hide the modal
                  console.log('Modal hidden');
              } else {
                  console.error('Modal not found when closing');
              }
          });
      });

      // Close the modal when clicking outside the modal content
      window.onclick = function(event) {
          const modal = document.querySelector('.sizeModal');
          if (modal && event.target == modal) {
              modal.style.display = 'none'; // Hide the modal
          }
      };
  });
</script>
